PYODIDE_ROOT=$(abspath ..)
PYVERSION ?= 3.12.1
PYODIDE_EMSCRIPTEN_VERSION ?= 3.1.58
PYODIDE_VERSION ?= 0.26.0.dev0
PYTHON_ARCHIVE_SHA256=d01ec6a33bc10009b09c17da95cc2759af5a580a7316b3a446eb4190e13f97b2
PLATFORM_TRIPLET=wasm32-emscripten
SYSCONFIG_NAME=_sysconfigdata_$(CPYTHON_ABI_FLAGS)_emscripten_$(PLATFORM_TRIPLET)
ROOT=$(cd -- "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 ; pwd -P)
source "$ROOT/emsdk/emsdk/emsdk_env.sh" 2> /dev/null || true
PATH="$ROOT/node_modules/.bin/:$ROOT/emsdk/emsdk/ccache/git-emscripten_64bit/bin:$PATH:$ROOT/packages/.artifacts/bin/"
EMCC_PATH=$(which emcc.py || echo ".")
EM_DIR=$(dirname "$EMCC_PATH")
EM_DIR
_EMCC_CCACHE=1
EM_CONFIG="$ROOT/emsdk/emsdk/.emscripten"
version_tmp_1 := $(subst ., ,$(PYVERSION:v%=%))
version_tmp_2 := $(subst a, ,$(version_tmp_1))
version_tmp_3 := $(subst b, ,$(version_tmp_2))
version_tuple := $(subst r, ,$(version_tmp_3))
PYMAJOR=$(word 1,$(version_tuple))
PYMINOR=$(word 2,$(version_tuple))
PYMICRO=$(word 3,$(version_tuple))
PYSTABLEVERSION=$(PYMAJOR).$(PYMINOR).$(PYMICRO)
HOSTPYTHONROOT=$(shell python${PYMAJOR}.${PYMINOR} -c "import sys; print(sys.prefix)")
HOSTPYTHON=$(HOSTPYTHONROOT)/bin/python$(PYMAJOR).$(PYMINOR)
PYTHON_ARCHIVE_URL=https://www.python.org/ftp/python/$(PYSTABLEVERSION)/Python-$(PYVERSION).tgz
CPYTHONROOT=$(PYODIDE_ROOT)/cpython
CPYTHONINSTALL=$(CPYTHONROOT)/installs/python-$(PYVERSION)
CPYTHONLIB=$(CPYTHONINSTALL)/lib/python$(PYMAJOR).$(PYMINOR)
SYSCONFIGDATA_DIR=$(CPYTHONINSTALL)/sysconfigdata/
CPYTHONBUILD=$(CPYTHONROOT)/build/Python-$(PYVERSION)/
TARGETINSTALLDIR=$(PYODIDE_ROOT)/cpython/installs/python-$(PYVERSION)
PYTHONINCLUDE=$(PYODIDE_ROOT)/cpython/installs/python-$(PYVERSION)/include/python$(PYMAJOR).$(PYMINOR)$(CPYTHON_ABI_FLAGS)
PYODIDE_BASE_URL?=./
PYODIDE_ZIP_COMPRESSION_LEVEL?=6
PIP_CONSTRAINT=$(PYODIDE_ROOT)/tools/constraints.txt
PYZIP_EXCLUDE_FILES=\
	ensurepip/ \
	venv/ \
	lib2to3/ \
	_osx_support.py \
	_aix_support.py \
	curses/ \
	dbm/ \
	idlelib/ \
	tkinter/ \
	turtle.py \
	turtledemo/ \
	test/ \
	sqlite3/ \
	ssl.py \
	lzma.py \
	_pydecimal.py \
	pydoc_data/
PYZIP_JS_STUBS=\
	webbrowser.py
DBGFLAGS_NODEBUG=-g0
DBGFLAGS_WASMDEBUG=-g2
DBGFLAGS_SOURCEMAPDEBUG=-g3
DBG_LDFLAGS_SOURCEMAPDEBUG=-gseparate-dwarf
DBGFLAGS=$(DBGFLAGS_NODEBUG)
OPTFLAGS=-O2
CFLAGS_BASE=\
	$(OPTFLAGS) \
	$(DBGFLAGS) \
	-fPIC \
	$(EXTRA_CFLAGS)
LDFLAGS_BASE=\
	$(OPTFLAGS) \
	$(DBGFLAGS) \
	$(DBG_LDFLAGS) \
	-L$(CPYTHONROOT)/installs/python-$(PYVERSION)/lib/ \
	-s WASM_BIGINT \
	$(EXTRA_LDFLAGS)
CXXFLAGS_BASE=
MAIN_MODULE_LDFLAGS= $(LDFLAGS_BASE) \
	-s MAIN_MODULE=1 \
	-s MODULARIZE=1 \
	-s LZ4=1 \
	-s EXPORT_NAME="'_createPyodideModule'" \
	-s EXPORT_EXCEPTION_HANDLING_HELPERS \
	-s EXCEPTION_CATCHING_ALLOWED=['we only want to allow exception handling in side modules'] \
	-sEXPORTED_RUNTIME_METHODS='wasmTable,ERRNO_CODES' \
	-s DEMANGLE_SUPPORT=1 \
	-s USE_ZLIB \
	-s USE_BZIP2 \
	-s FORCE_FILESYSTEM=1 \
	-s TOTAL_MEMORY=20971520 \
	-s ALLOW_MEMORY_GROWTH=1 \
	-s EXPORT_ALL=1 \
	-s STACK_SIZE=5MB \
	-s AUTO_JS_LIBRARIES=0 \
	-s AUTO_NATIVE_LIBRARIES=0 \
	-s NODEJS_CATCH_EXIT=0 \
	-s NODEJS_CATCH_REJECTION=0 \
	-s EXPORTED_FUNCTIONS='$(EXPORTS)'\
	\
	-lpython$(PYMAJOR).$(PYMINOR)$(CPYTHON_ABI_FLAGS) \
	-lffi \
	-lstdc++ \
	-lidbfs.js \
	-lnodefs.js \
	-lproxyfs.js \
	-lworkerfs.js \
	-lwebsocket.js \
	-leventloop.js \
	-lhiwire \
	\
	-lGL \
	-legl.js \
	-lwebgl.js \
	-lhtml5_webgl.js \
	-lsdl.js \
	-sGL_WORKAROUND_SAFARI_GETCONTEXT_BUG=0

EXPORTS= _main\
		\
		,_free \
		\
		,_hiwire_new \
		,_hiwire_intern \
		,_hiwire_num_refs \
		,_hiwire_get \
		,_hiwire_incref \
		,_hiwire_decref \
		,_hiwire_pop \
		,__hiwire_set \
		,__hiwire_immortal_add \
		,_jslib_init \
		,_init_pyodide_proxy \
		\
		,_PyBuffer_Release \
		,_Py_DecRef \
		,_PyDict_New \
		,_PyDict_SetItem \
		,__PyErr_CheckSignals \
		,_PyErr_CheckSignals \
		,_PyErr_Clear \
		,_PyErr_Occurred \
		,_PyErr_Print \
		,_PyErr_SetRaisedException \
		,_PyErr_SetString \
		,_PyEval_SaveThread \
		,_PyEval_RestoreThread \
		,_PyFloat_FromDouble \
		,_PyGILState_Check \
		,_Py_IncRef \
		,_PyList_New \
		,_PyList_SetItem \
		,__PyLong_FromByteArray \
		,_PyLong_FromDouble \
		,_PyMem_Free \
		,_PyObject_GetAIter \
		,_PyObject_GetIter \
		,_PyObject_Size \
		,_PyRun_SimpleString \
		,_PySet_Add \
		,_PySet_New \
		,__PyTraceback_Add \
		,_PyUnicode_Data \
		,_PyUnicode_New \

MAIN_MODULE_CFLAGS= $(CFLAGS_BASE) \
	-Wall \
	-Wno-warn-absolute-paths \
	-Werror=unused-variable \
	-Werror=sometimes-uninitialized \
	-Werror=int-conversion \
	-Werror=incompatible-pointer-types \
	-Werror=unused-result \
	-mreference-types \
	-I$(PYTHONINCLUDE) \
	-I$(PYTHONINCLUDE)/.. \
	-s EXCEPTION_CATCHING_ALLOWED=['we only want to allow exception handling in side modules']
ROOT=$(abspath .)
PYTHON_CFLAGS=$(CFLAGS_BASE) -DPY_CALL_TRAMPOLINE
PYBUILD=$(CPYTHONROOT)/build/Python-$(PYVERSION)
PYINSTALL=$(CPYTHONINSTALL)
PYTARBALL=$(ROOT)/downloads/Python-$(PYVERSION).tgz
PYLIB=libpython$(PYMAJOR).$(PYMINOR)$(CPYTHON_ABI_FLAGS).a
FFIBUILD=$(ROOT)/build/libffi
LIBFFIREPO=https://github.com/libffi/libffi
LIBFFI_COMMIT=f08493d249d2067c8b3207ba46693dd858f95db3
HIWIREBUILD=$(ROOT)/build/hiwire
HIWIREREPO=https://github.com/hoodmane/hiwire
HIWIRE_COMMIT=49f3450e34f3f50d4b8296e782dc321bb2e3264e
LIBPYTHON_EXTRA_OBJECTS=$$(LIBMPDEC_OBJS) $$(LIBEXPAT_OBJS) $$(LIBHACL_SHA2_OBJS)